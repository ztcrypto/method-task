/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Powered } from "../Powered";

export class Powered__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Powered> {
    return super.deploy(overrides || {}) as Promise<Powered>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Powered {
    return super.attach(address) as Powered;
  }
  connect(signer: Signer): Powered__factory {
    return super.connect(signer) as Powered__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Powered {
    return new Contract(address, _abi, signerOrProvider) as Powered;
  }
}

const _abi = [
  {
    inputs: [],
    name: "getPowerController",
    outputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPowerSwitch",
    outputs: [
      {
        internalType: "address",
        name: "powerSwitch",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOffline",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOnline",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isShutdown",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610276806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063766f13bc11610050578063766f13bc146100905780638531a636146100b4578063bf86d690146100bc57610067565b8063438cae7e1461006c578063664ab18e14610088575b600080fd5b6100746100c4565b604080519115158252519081900360200190f35b610074610144565b610098610193565b604080516001600160a01b039092168252519081900360200190f35b6100986101e2565b6100746101f1565b60008060009054906101000a90046001600160a01b03166001600160a01b031663438cae7e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011357600080fd5b505afa158015610127573d6000803e3d6000fd5b505050506040513d602081101561013d57600080fd5b5051905090565b60008060009054906101000a90046001600160a01b03166001600160a01b031663664ab18e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011357600080fd5b60008060009054906101000a90046001600160a01b03166001600160a01b031663766f13bc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011357600080fd5b6000546001600160a01b031690565b60008060009054906101000a90046001600160a01b03166001600160a01b031663bf86d6906040518163ffffffff1660e01b815260040160206040518083038186803b15801561011357600080fdfea2646970667358221220be01d7bd51d0037120379affef733cbdba68b774e967639dbce997c91bc5e07664736f6c63430007060033";
