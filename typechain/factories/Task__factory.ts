/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Task } from "../Task";

export class Task__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _factory: string,
    _staker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Task> {
    return super.deploy(_factory, _staker, overrides || {}) as Promise<Task>;
  }
  getDeployTransaction(
    _factory: string,
    _staker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _staker, overrides || {});
  }
  attach(address: string): Task {
    return super.attach(address) as Task;
  }
  connect(signer: Signer): Task__factory {
    return super.connect(signer) as Task__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Task {
    return new Contract(address, _abi, signerOrProvider) as Task;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "contract IUniStaker",
        name: "_staker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ERC721Received",
    type: "event",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintAndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "rescueERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staker",
    outputs: [
      {
        internalType: "contract IUniStaker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610db6380380610db683398101604081905261002f91610060565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b1565b60008060408385031215610072578182fd5b825161007d81610099565b602084015190925061008e81610099565b809150509250929050565b6001600160a01b03811681146100ae57600080fd5b50565b610cf6806100c06000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635d799f871161005b5780635d799f87146100d35780635ebaf1db146100e6578063c45a0155146100fb578063fa3e4705146101035761007d565b8063150b7a02146100825780631626ba7e146100ab578063230ae89c146100be575b600080fd5b610095610090366004610901565b610116565b6040516100a29190610c7b565b60405180910390f35b6100956100b93660046109bb565b610182565b6100d16100cc366004610a94565b6101ea565b005b6100d16100e1366004610a5c565b6106c5565b6100ee6107d8565b6040516100a29190610b63565b6100ee6107e7565b6100d1610111366004610abf565b6107f6565b60007fa05d90f300156ad1b545bc5d8197024456f21d22a708f5af04dd293e3d605251868686868660405161014f959493929190610be0565b60405180910390a1507f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6000336040516020016101959190610b63565b60405160208183030381529060405280519060200120828051906020012014156101e057507f1626ba7e356f5979dd355a3d2bfb43e80420a480c3b854edce286a82d74968696101e4565b5060005b92915050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663efc81a8c6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561023b57600080fd5b505af115801561024f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027391906108de565b905060008060009054906101000a90046001600160a01b03166001600160a01b031663efc81a8c6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156102c657600080fd5b505af11580156102da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fe91906108de565b90506001600160a01b03841663a9059cbb8361031b86600261085d565b6040518363ffffffff1660e01b8152600401610338929190610c31565b602060405180830381600087803b15801561035257600080fd5b505af1158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a919061099b565b506001600160a01b03821663c792f45d856103a686600261085d565b856040516020016103b79190610b63565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016103e493929190610c4a565b600060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b50506001546001600160a01b03808816935063095ea7b392501661043786600261085d565b6040518363ffffffff1660e01b8152600401610454929190610c31565b602060405180830381600087803b15801561046e57600080fd5b505af1158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a6919061099b565b506001546000546001600160a01b0391821691632c3dbf1c91859116876104ce88600261085d565b876040516020016104df9190610b63565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161050e959493929190610b77565b600060405180830381600087803b15801561052857600080fd5b505af115801561053c573d6000803e3d6000fd5b50506000546040516323b872dd60e01b81526001600160a01b0391821693506323b872dd92506105759130918791871690600401610bbc565b600060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b50506000546040516001600160a01b0380871694506343af9df69350918216918516906105d4908790602001610b63565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161060193929190610c4a565b600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b50506000546040516001600160a01b03808716945063c1dc35bb935091821691851690610660908790602001610b63565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161068d93929190610c4a565b600060405180830381600087803b1580156106a757600080fd5b505af11580156106bb573d6000803e3d6000fd5b5050505050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0383169063a9059cbb90839083906370a0823190610714903090600401610b63565b60206040518083038186803b15801561072c57600080fd5b505afa158015610740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107649190610b00565b6040518363ffffffff1660e01b8152600401610781929190610c31565b602060405180830381600087803b15801561079b57600080fd5b505af11580156107af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d3919061099b565b505050565b6001546001600160a01b031681565b6000546001600160a01b031681565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9061082690309085908790600401610bbc565b600060405180830381600087803b15801561084057600080fd5b505af1158015610854573d6000803e3d6000fd5b50505050505050565b60008082116108cd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816108d657fe5b049392505050565b6000602082840312156108ef578081fd5b81516108fa81610ca8565b9392505050565b600080600080600060808688031215610918578081fd5b853561092381610ca8565b9450602086013561093381610ca8565b935060408601359250606086013567ffffffffffffffff80821115610956578283fd5b818801915088601f830112610969578283fd5b813581811115610977578384fd5b896020828501011115610988578384fd5b9699959850939650602001949392505050565b6000602082840312156109ac578081fd5b815180151581146108fa578182fd5b600080604083850312156109cd578182fd5b8235915060208084013567ffffffffffffffff808211156109ec578384fd5b818601915086601f8301126109ff578384fd5b813581811115610a0b57fe5b604051601f8201601f1916810185018381118282101715610a2857fe5b6040528181528382018501891015610a3e578586fd5b81858501868301378585838301015280955050505050509250929050565b60008060408385031215610a6e578182fd5b8235610a7981610ca8565b91506020830135610a8981610ca8565b809150509250929050565b60008060408385031215610aa6578182fd5b8235610ab181610ca8565b946020939093013593505050565b600080600060608486031215610ad3578283fd5b8335610ade81610ca8565b9250602084013591506040840135610af581610ca8565b809150509250925092565b600060208284031215610b11578081fd5b5051919050565b60008151808452815b81811015610b3d57602081850181015186830182015201610b21565b81811115610b4e5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006001600160a01b038088168352808716602084015280861660408401525083606083015260a06080830152610bb160a0830184610b18565b979650505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a084013781830160a090810191909152601f909201601f19160101949350505050565b6001600160a01b03929092168252602082015260400190565b60006001600160a01b038516825283602083015260606040830152610c726060830184610b18565b95945050505050565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b6001600160a01b0381168114610cbd57600080fd5b5056fea2646970667358221220b1725e93ea5a48af2276c0e6ec2695d36e97359ce1be8ca068369effa6f53e0664736f6c63430007060033";
